//
//  NoteMigration.swift
//
//  Generated by Notenik on 2020-08-10
//
//  Copyright Â© 2020 Herb Bowie (https://powersurgepub.com)
//
//  This programming code is published as open source software under the
//  terms of the MIT License (https://opensource.org/licenses/MIT).
//

import Vapor
import Fluent

struct NoteMigration: Migration {

    func prepare(on db: Database) -> EventLoopFuture<Void> {
        db.eventLoop.flatten([
            db.schema(NoteModel.schema)
                .id()
                .field(NoteModel.FieldKeys.title, 
					.string,
					.required)
                .field(NoteModel.FieldKeys.titleSort, 
					.string,
					.required)
                .field(NoteModel.FieldKeys.localId, 
					.string,
					.required)
                .field(NoteModel.FieldKeys.slug, 
					.string,
					.required)
                .field(NoteModel.FieldKeys.seq, 
					.string)
                .field(NoteModel.FieldKeys.seqSort, 
					.string)
                .field(NoteModel.FieldKeys.date, 
					.string)
                .field(NoteModel.FieldKeys.dateSort, 
					.string)
                .field(NoteModel.FieldKeys.status, 
					.string)
                .field(NoteModel.FieldKeys.statusSort, 
					.string)
                .field(NoteModel.FieldKeys.statusDone, 
					.string)
                .field(NoteModel.FieldKeys.tags, 
					.string)
                .field(NoteModel.FieldKeys.link, 
					.string)
                .field(NoteModel.FieldKeys.author, 
					.string)
                .field(NoteModel.FieldKeys.authorSort, 
					.string)
                .field(NoteModel.FieldKeys.teaser, 
					.string)
                .field(NoteModel.FieldKeys.teaserHtml, 
					.string)
                .field(NoteModel.FieldKeys.body, 
					.string,
					.required)
                .field(NoteModel.FieldKeys.bodyHtml, 
					.string,
					.required)
                .create(),
            db.schema(NoteFieldModel.schema)
                .id()
                .field(NoteFieldModel.FieldKeys.label, 
					.string,
					.required)
                .field(NoteFieldModel.FieldKeys.value, 
					.string,
					.required)
                .field(NoteFieldModel.FieldKeys.noteId, .uuid, 
					.required)
                .foreignKey(NoteFieldModel.FieldKeys.noteId,
                            references: NoteModel.schema, .id,
                            onDelete: .cascade,
                            onUpdate: .cascade)
                .create(),
        ])
    }

    func revert(on db: Database) -> EventLoopFuture<Void> {
        db.eventLoop.flatten([
            db.schema(NoteModel.schema).delete(),
            db.schema(NoteFieldModel.schema).delete(),
        ])
    }

}
